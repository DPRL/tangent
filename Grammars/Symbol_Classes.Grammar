%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Symbol_Classes.Grammar
%	- default dialect specifying membership of symbol classes.
%
% Copyright (C) 2000,2002,2004 Richard Zanibbi
%
% This program is free software; you can redistribute it and/or
% modify it under the terms of the GNU General Public License
% as published by the Free Software Foundation; either version 2
% of the License, or (at your option) any later version.
%
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with this program; if not, write to the Free Software
% Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% v 1.0.0 Jan. 31, 2002 original version; 
%		  moved here from BST.Grammar
% v 1.0.1 Feb. 1, 2002
%		  - adding TeX labels for symbols
%		    directly into the grammar itself.
% v 1.0.2 June 1, 2011
%         - Removing '{' and '}' from symbol list, as these are reserved 
%           symbols in LaTeX.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% I. 'PLAIN' (or 'REGULAR') Symbols:
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
define regular_symbol
		[close_bracket]
    |	[ascending_regular]
    |	[descending_regular]
    |	[centred_regular]
end define

define centred_regular
		[regular_lower_greek]
    %|   [token]
	%|	[number]
	|	[digit]
	|	[letter]
end define

define close_bracket
		')
    |	']
    %|   '}
	|	[tex_close_bracket]
    |	'right-brace
    |	'right-brack
    |	'right-paren
	% Feb. 7, 2002: added '|' here; as it behaves like a fence
	% symbol with permitted super and subscripts.
	|	'|			| '\mid
end define

define descending_regular
        [desc_lower_case_letter]
    |   [desc_lower_case_greek]
end define

define desc_lower_case_letter
     	'g
    | 	'p
    | 	'q
    |	'y
end define

define ascending_regular
		%[integernumber] % digit.
		[digit]
    |	[upperid] % upper case letter.
    |   [upper_case_greek]
    |   [asc_lower_case_letter] 
    |   [asc_lower_case_greek]
	|	'\hbar | '\ell | '\partial 
end define

define asc_lower_case_letter
    % Lower case (english) letters
		'b
    | 	'd
    | 	'f
    | 	'h
    | 	'i
    | 	'k
    | 	'l
    | 	't
end define

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Greek letters:
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
define upper_case_greek
    % Upper case Greek letters
    	'Gamma | '\Gamma
    | 	'Delta | '\Delta
    | 	'Theta | '\Theta
    | 	'Lambda | '\Lamba
    | 	'Xi | '\Xi
    | 	'Phi | '\Phi
    |   'Psi | '\Psi
    | 	'Omega | '\Omega
end define

define desc_lower_case_greek
    % Lower case Greek letters
   		'gamma | '\gamma
    | 	'eta | '\eta
    | 	'mu  | '\mu
    | 	'rho | '\rho
    | 	'chi | '\chi
    | 	'psi | '\psi
end define

define asc_lower_case_greek
        'delta | '\delta
    |   'Theta | '\Theta
    |   'lambda | '\lambda
end define

define regular_lower_greek
		'alpha | '\alpha
    |	'beta  | '\beta
    |   'epsilon | '\epsilon | '\varepsilon
    |   'zeta | '\zeta
    |   'iota | '\iota
    |   'kappa | '\kappa
    |   'nu | '\nu
    |   'xi | '\xi
    |   'pi | '\pi
    |   'sigma | '\sigma
    |   'tau  | '\tau
    |   'upsilon | '\upsilon
    |   'phi  | '\phi
    |   'omega  | '\omega
end define


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% II. VARIABLE RANGE SYMBOLS
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
define limit_symbol
     	[large_square_limit_symbols]
    |	[tall_thin_limit_symbols]  
    |   "LIMITS_CENTRED" [limit_symbol]
end define

define large_square_limit_symbols
		'Sum  | 'sum | '\Sigma  | '\sum | 'Sigma
    |	'Pi	| '\Pi | '\prod
    |	'Intersection | 'intersection | 'intersect | '\bigcap
	|	'\cap
    |	'Union | 'union | '\bigcup
	%  Function names in this class:
    |   'lim
    %   CIT additions.
    |   'forall | '\forall
end define

define tall_thin_limit_symbols
		'Integral | 'integral | '\int
    |   'o-integral | 'oint | '\oint
end define

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% III. NON-SCRIPTED SYMBOLS
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
define nonscripted_symbol
		[horizontal_line]
    |   [binary_operator]
    |   [open_bracket] 
    |   [accent] 
end define

define open_bracket
	%	'{ [TAB]
        '[ [TAB]
    |   '( [TAB]
    |	'left-brace
    |	'left-brack
    |	'left-paren

	|	[tex_open_bracket]
end define

define small_square_binop
		'*  | 'asterisk
    |   '+  | 'plus  
    %|   '^  | '\hat
	% |	[hat] 
	| '\hat
	|   '@  | 'at
	|   'element | '\in 
	|   'not-element | 'notin | 'notElement | '\notin
	|   'times | '\times
	|	'cong  | '\cong  | 'approxEqualsTo
end define

define small_rectangular_binop
		'=  |  'equals  | 'equal | ',
    |	'~  |  'sim  | '\sim  | 'tilde
    |	'neg  | 'not  |  '\neg
	| 	'\ll
    %  CIT
    |	'not-equal  |  'neq  |  'notEqual  |  '\neq
    |   'conjunction  |  'land  | '\land
    |	'disjunction  |  'lor   | '\lor
end define

define wide_rectangular_binop
    	'double-left-arrow  |  '\Leftarrow  | 'Leftarrow
    |	'double-right-arrow |  '\Rightarrow  | 'Rightarrow
    |	'proportional  |  'propto  |  '\propto
end define

define upper_case_binop
	 	'/ | slash | '\ddiv
    |   '< | less-than
    |   '> | greater-than
    |   '&  | 'ampersand
    |	'exists | '\exists
    |	'models | '\models
    |   'nabla  |  '\nabla
    |	'not-models %|  '\not\models
    |	'partial  | '\partial
    |	'backslash  | '\
    |	'dollar  | '$
    |	'percent | '%
    |	'question  | '?
end define

define large_square_binop
 		'subset  | '\subset
    %|	'subset-equal 
	| 'subseteq  | '\subseteq
    %|	'subset-not-equal %| \not\subseteq
    |   '<=  | '\leq  %| 'less-equal
    |   '>=  | '\geq  %| 'greater-equal
   
    %  CIT
    |   'box  | '\box
    |	'diamond  | '\diamond
    |	'equivalent | '\equiv  |  '\equivalence
    |	'o-plus  |  oplus  |  '\oplus
    |	'o-times |  otimes |  '\otimes
    |	'perp  | '\perp
    |   'therefore  |  '\therefore
    |	'pound  |  '#
    |	'not-equivalent %| \not\equiv
end define


define short_thin_binop
    	'colon  |  ': | ';
end define

define tall_thin_binop
    	'exclamation  |  '!
	|	'parallel	 | '\parallel
end define

define binary_operator
		[small_square_binop]	
    |	[small_rectangular_binop]
    |	[upper_case_binop]
    |	[large_square_binop]
    |	[short_thin_binop]
    |   [tall_thin_binop]
    |	[wide_rectangular_binop]
end define

define horizontal_line
		'- | 'horline |	'horizontal_line | 'horizontal-line
    |	'horizontalLine  |  'minus
	|	'\hdiv % UW_III(?)
end define

define accent
    	'rightarrow | 'right-arrow | '\rightarrow
    |	'.  |  'dot  | 'DOT | '\cdot
    |   '~ |  'sim  | '\sim  | 'tilde
    %|   '^  | 'hat  | '\hat
    |   ''
	|	[single_quote]  % June 13, 2011 addition.
    %   CIT additions
    |	'left-arrow | 'leftarrow | '\leftarrow
    |	'left-right-arrow | 'leftrightarrow  | '\leftrightarrow
end define

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% IV. CONTAINING SYMBOLS (or 'ROOT')
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
define root_symbol
		'sqrt | 'square_root  
		%|  '\sqrt  | 
		'root  | 'squareRoot
end define






